{"version":3,"sources":["header.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","addNote","type","placeholder","value","searchText","onChange","e","onSearch","target","Note","note","title","updatedValue","editMeId","id","onType","description","removeNote","NotesList","noteElements","notes","filter","doesMatchSearch","map","src_Note","key","App","state","Date","now","newNotes","concat","Object","toConsumableArray","_this","setState","updatedKey","updatedNotes","text","newSearchText","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch","noteId","stringifiedNotes","JSON","stringify","this","localStorage","setItem","getItem","savedNotes","parse","header","src_NotesList","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.51bca49b.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = (props) => {\n  const callSearch = (e) => {\n    props.onSearch(e.target.value);\n  };\n\n  return (\n    <header className=\"app-header\">\n      <h1 className=\"app-header__title\">Super Sticky Notes</h1>\n      <aside className=\"app-header__controls\">\n        <button className=\"add-new\" onClick={props.addNote}>\n          + New Note\n        </button>\n        <input\n          type=\"text\"\n          placeholder=\"Type here to search...\"\n          className=\"search\"\n          value={props.searchText}\n          onChange={callSearch}\n        />\n      </aside>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Note = (props) => {\n  const updateTitle = (e) => {\n    const updatedValue = e.target.value;\n    const editMeId = props.note.id;\n    props.onType(editMeId, \"title\", updatedValue);\n  };\n  const updateDescription = (e) => {\n    const updatedValue = e.target.value;\n    const editMeId = props.note.id;\n    props.onType(editMeId, \"description\", updatedValue);\n  };\n  const clickDelete = () => props.removeNote(props.note.id);\n\n  return (\n    <li className=\"note\">\n      <input\n        type=\"text\"\n        value={props.note.title}\n        onChange={updateTitle}\n        placeholder=\"Title\"\n        className=\"note__title\"\n      />\n      <textarea\n        value={props.note.description}\n        onChange={updateDescription}\n        placeholder=\"Description...\"\n        className=\"note__description\"\n      />\n      <span onClick={clickDelete} className=\"note__delete\">\n        X\n      </span>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\nimport Note from \"./Note.js\";\n\nconst NotesList = (props) => {\n  const keepSearchMatches = (note) => note.doesMatchSearch;\n  const searchMatches = props.notes.filter(keepSearchMatches);\n\n  const renderNote = (note) => (\n    <Note\n      note={note}\n      key={note.id}\n      onType={props.onType}\n      removeNote={props.removeNote}\n    />\n  );\n\n  const noteElements = searchMatches.map(renderNote);\n  return <ul className=\"notes-list\">{noteElements}</ul>;\n};\n\nexport default NotesList;\n","import React, { Component } from \"react\";\nimport Header from \"./header.js\";\nimport NotesList from \"./NotesList.js\";\n\nclass App extends Component {\n  state = {\n    notes: [\n      {\n        id: Date.now(),\n        title: \"\",\n        description: \"\",\n        doesMatchSearch: true\n      }\n    ],\n    searchText: \"\"\n  };\n\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });\n  };\n\n  onType = (editMeId, updatedKey, updatedValue) => {\n    const updatedNotes = this.state.notes.map((note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    });\n    this.setState({ notes: updatedNotes });\n  };\n\n  onSearch = (text) => {\n    const newSearchText = text.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!newSearchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(newSearchText);\n        const descriptionMatch = description.includes(newSearchText);\n        const hasMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    this.setState({\n      searchText: newSearchText,\n      notes: updatedNotes\n    });\n  };\n\n  removeNote = (noteId) => {\n    /* remove note by id of note that the user clicked on */\n    const notIdMatch = (note) => note.id !== noteId;\n    const updatedNotes = this.state.notes.filter(notIdMatch);\n    this.setState({ notes: updatedNotes });\n  };\n\n  componentDidUpdate() {\n    const stringifiedNotes = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\n  }\n\n  componentDidMount() {\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\n    if (stringifiedNotes) {\n      const savedNotes = JSON.parse(stringifiedNotes);\n      this.setState({ notes: savedNotes });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          searchText={this.state.searchText}\n          addNote={this.addNote}\n          onSearch={this.onSearch}\n        />\n        <NotesList\n          notes={this.state.notes}\n          onType={this.onType}\n          removeNote={this.removeNote}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}